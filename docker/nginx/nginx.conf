server {
    listen 80 default;
    listen [::]:80;

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    location ^~ /.well-known {
        allow all;
        root  /data/letsencrypt/;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name bap.ovh;
    root /app_dev/web;
    
    access_log /dev/stdout;
    error_log /dev/stderr info;
    
    # SSL
    ssl on;

    add_header Strict-Transport-Security "max-age=31536000" always;

    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;

    ssl_certificate           /etc/letsencrypt/live/bap.ovh/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/bap.ovh/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/bap.ovh/chain.pem;
    # /SSL

    # Antispam
    deny 180.76.15.24; # Baiduspider chinese bot scanner
    deny 176.31.11.1;
    deny 67.197.171.18;
    
    location /scrape {return 404;}
    location /announce {return 404;}
    location /3.csv {return 404;}
    location /medium.csv {return 404;}
    # /Antispam

    
    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app.php$is_args$args;
    }
    
    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(app_dev|config)\.php(/|$) {
        allow 83.167.33.114;
        allow 195.132.113.226;
        # stripe
        allow 54.187.174.169;
        allow 54.187.205.235;
        allow 54.187.216.72;
        allow 54.241.31.99;
        allow 54.241.31.102;
        allow 54.241.34.107;

        deny all;

        fastcgi_pass php-fpm:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }

    # PROD
    location ~ ^/app\.php(/|$) {
        fastcgi_pass php-fpm:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name inscriptions.troismousquetons.com inscriptions.3mq.fr;
    root /app/web;
    
    access_log /dev/stdout;
    error_log /dev/stderr info;

    # SSL
    ssl on;

    add_header Strict-Transport-Security "max-age=31536000" always;

    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;

    ssl_certificate           /etc/letsencrypt/live/inscriptions.troismousquetons.com/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/inscriptions.troismousquetons.com/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/inscriptions.troismousquetons.com/chain.pem;
    # /SSL

    # Antispam
    deny 180.76.15.24; # Baiduspider chinese bot scanner
    deny 176.31.11.1;
    deny 67.197.171.18;
    
    location /scrape {return 404;}
    location /announce {return 404;}
    location /3.csv {return 404;}
    location /medium.csv {return 404;}
    # /Antispam

    # Symfony
    location / {
        try_files $uri /app.php$is_args$args; # try to serve file directly, fallback to app.php
    }
 
    location ~ ^/app\.php(/|$) {
        fastcgi_pass php-fpm:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }
}
